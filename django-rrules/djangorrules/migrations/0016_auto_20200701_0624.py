# Generated by Django 2.2.9 on 2020-07-01 06:24

import django.core.validators
from django.db import migrations, models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('djangorrules', '0015_auto_20200628_0208'),
    ]

    operations = [
        migrations.AlterField(
            model_name='rule',
            name='bymonthday',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, '1st day'), (2, '2nd day'), (3, '3rd day'), (4, '4th day'), (5, '5th day'), (6, '6th day'), (7, '7th day'), (8, '8th day'), (9, '9th day'), (10, '10th day'), (11, '11th day'), (12, '12th day'), (13, '13th day'), (14, '14th day'), (15, '15th day'), (16, '16th day'), (17, '17th day'), (18, '18th day'), (19, '19th day'), (20, '20th day'), (21, '21st day'), (22, '22nd day'), (23, '23rd day'), (24, '24th day'), (25, '25th day'), (26, '26th day'), (27, '27th day'), (28, '28th day'), (29, '29th day'), (30, '30th day'), (31, '31st day'), (-1, 'last day'), (-2, 'the penultimate day'), (-3, 'antepenultimate day'), (-4, 'fourth day before last day')], default=None, max_length=95, null=True),
        ),
        migrations.AlterField(
            model_name='rule',
            name='bysetpos',
            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'first occurrence'), (2, 'second occurrence'), (3, 'third occurrence'), (4, 'fourth occurrence'), (-1, 'last occurrence'), (-2, 'the penultimate occurrence'), (-3, 'antepenultimate occurrence')], default=None, max_length=16, null=True, validators=[django.core.validators.MinValueValidator(-3), django.core.validators.MaxValueValidator(4)]),
        ),
        migrations.AlterField(
            model_name='rule',
            name='count',
            field=models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='rule',
            name='interval',
            field=models.PositiveIntegerField(default=None, validators=[django.core.validators.MinValueValidator(1)]),
        ),
    ]
